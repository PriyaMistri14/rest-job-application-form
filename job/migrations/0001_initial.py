# Generated by Django 4.2.1 on 2023-05-31 14:04

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import job.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CandidateMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=30, validators=[job.models.validate_name])),
                ('lname', models.CharField(max_length=30, validators=[job.models.validate_name])),
                ('surname', models.CharField(max_length=30, validators=[job.models.validate_name])),
                ('contact_no', models.CharField(max_length=10, validators=[job.models.validate_contact_no])),
                ('city', models.CharField(max_length=30, validators=[job.models.validate_name])),
                ('state', models.CharField(max_length=30, validators=[job.models.validate_name])),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=30)),
                ('dob', models.DateField(validators=[job.models.validate_dob])),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyKnownMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technology', models.CharField(blank=True, choices=[('PHP', 'PHP'), ('Laravel', 'Laravel'), ('Mysql', 'Mysql'), ('Oracle', 'Oracle')], max_length=30, null=True)),
                ('ranting', models.IntegerField(blank=True, null=True, validators=[job.models.validate_rating])),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.candidatemaster')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refe_name', models.CharField(max_length=50, validators=[job.models.validate_name])),
                ('refe_contact_no', models.CharField(max_length=10, validators=[job.models.validate_contact_no])),
                ('refe_relation', models.CharField(max_length=30, validators=[job.models.validate_name])),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.candidatemaster')),
            ],
        ),
        migrations.CreateModel(
            name='PreferenceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefer_location', models.CharField(choices=[('Ahmedabad', 'Ahmedabad'), ('Surat', 'Surat'), ('Rajkot', 'Rajkot')], max_length=30)),
                ('notice_period', models.IntegerField(validators=[job.models.validate_notice_period])),
                ('expected_ctc', models.IntegerField()),
                ('current_ctc', models.IntegerField()),
                ('department', models.CharField(choices=[('Development', 'Development'), ('Design', 'Design'), ('HR', 'HR'), ('Testing', 'Testing')], max_length=30)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.candidatemaster')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageKnownMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('Hindi', 'Hindi'), ('English', 'English'), ('Gujrati', 'Gujrati')], max_length=30, null=True)),
                ('read', models.BooleanField(blank=True, null=True)),
                ('write', models.BooleanField(blank=True, null=True)),
                ('speak', models.BooleanField(blank=True, null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.candidatemaster')),
            ],
        ),
        migrations.CreateModel(
            name='ExperienceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=50, validators=[job.models.validate_name])),
                ('designation', models.CharField(max_length=50, validators=[job.models.validate_name])),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.candidatemaster')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(choices=[('SSC', 'SSC'), ('HSC', 'HSC'), ('BECHELOR', 'BECHELOR'), ('MASTER', 'MASTER')], max_length=30)),
                ('name_of_board_university', models.CharField(max_length=30, validators=[job.models.validate_name])),
                ('passing_year', models.IntegerField(validators=[job.models.validate_year])),
                ('percentage', models.IntegerField(validators=[job.models.validate_percentage])),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.candidatemaster')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
